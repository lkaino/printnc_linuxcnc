; manual toolchange with automatic tool length probe 

o<manual_change> sub

(we change feed, metric/in and potentially G90)
(so record current modal state)
(M73 is not useful here because it reverts G43 on return too)
#<metric> = #<_metric>
#<absolute> = #<_absolute>
#<feed> = #<_feed>

G21 (TLO and toolchange position is in mm as per ini)
G90 (absolute)
G49 (zero the current tool offset)

; move to toolchange position: z, then xy
g53 g0 Z #<_ini[tool_change]change_pos_z>
g53 g0 X #<_ini[tool_change]change_pos_x> Y #<_ini[tool_change]change_pos_y>

; signal user to change tool
M101 P #<_hal[gladevcp.cmd-start-tool-change]> Q #<_selected_tool>
; and wait for acknowledgement
M66 P #<_ini[tool_change]signal_tool_change_din> L1 Q#<_ini[tool_change]timeout_secs>


;see if we timed out
O100 if [#5399 EQ -1]
        M101 P #<_hal[gladevcp.cmd-stop-tool-change]>
	O<restore> call [#<metric>] [#<absolute>] [#<feed>]
O100    return [-1] ; indicate timeout failure to epilog
O100 endif

O200 if [#<_selected_tool> EQ 0]   ; an unload.
        M101 P #<_hal[gladevcp.cmd-stop-tool-change]>
	O<restore> call [#<metric>] [#<absolute>] [#<feed>]
O200    return [1] ; indicate success
O200 endif

; tool changed - move to tool sensor
g53 g0 X #<_ini[tool_change]probe_pos_x> Y #<_ini[tool_change]probe_pos_y>
g53 g0 Z #<_ini[tool_change]probe_pos_z>

; probe tool length
M101 P #<_hal[gladevcp.cmd-stop-tool-change]>
M101 P #<_hal[gladevcp.cmd-probing]> Q1

F #<_ini[tool_change]probe_feed>

G38.3 Z #<_ini[tool_change]max_probe_z>

; we must execute this only in the milltask interpreter
; or preview will break, so test for '#<_task>' which is 1 for 
; the milltask interpreter and 0 in the UI's

O300 if [[#<_task> GT 0] and [#5070 EQ 0]]
    O<restore> call [#<metric>] [#<absolute>] [#<feed>]
O300    return [-2] ; indicate probe contact failure to epilog
O300 endif

#<loop_counter> = 0

#<up_avg> = 0 ; probe up average
#<up_count> = 0
#<down_avg> = 0 ; probe down average
O101 while [#<loop_counter> LE 5]
    ; probe up
    ;G0 Z-0.05
    
    ; Use G38.5 as the probing might fail if the probe has already lost contact
    G38.5 Z #<_ini[tool_change]change_pos_z> F5
    
    O400 if [#5070 EQ 1]
        #<up_count> = [#<up_count> + 1]
    O400 endif
    
    #<up_avg>= [#<up_avg>+#5063]
    ; probe down
    G38.3 Z #<_ini[tool_change]max_probe_z> F5
    #<down_avg> = [#<down_avg>+#5063]
    #<loop_counter> = [#<loop_counter> + 1]
O101 endwhile

O401 if [#<up_count> GT 0]
    #<up_avg> = [#<up_avg>/#<up_count>]
    #<down_avg> = [#<down_avg>/#<loop_counter>]
    #<total_avg> = [[#<up_avg>+#<down_avg>]/2]
    (debug, up #<up_avg>, down #<down_avg>, total #<total_avg>)
O401 else
    #<total_avg> = 0
O401 endif

G91 (relative mode)

O402 if [#<_hal[gladevcp.reftool]> EQ 1]
    #1000 = #<total_avg>
    G49 ; added to zero tool length offset
    G10 L1 P#<_selected_tool> Z0
    M101 P #<_hal[gladevcp.cmd-tool-offset]> Q #<total_avg>
O402 else
    #<diff> = [#<total_avg>-#1000]
    (debug, total_avg #<total_avg>, diff #<diff>)
    G10 L1 P#<_selected_tool> Z[#<diff>]
    M101 P #<_hal[gladevcp.cmd-reference-length]> Q #<diff>
O402 endif 

G43

M101 P #<_hal[gladevcp.cmd-probing]> Q0
M101 P #<_hal[gladevcp.cmd-stop-tool-change]>

G90 (absolute)

; move back to toolchange position: z, then xy
g53 g0 Z #<_ini[tool_change]change_pos_z>
g53 g0 X #<_ini[tool_change]change_pos_x> Y #<_ini[tool_change]change_pos_y>

; restore g20/21, g90/g91, feed
O<restore> call [#<metric>] [#<absolute>] [#<feed>]

; succeed by returning a positive value
o<manual_change> endsub [1]
m2
